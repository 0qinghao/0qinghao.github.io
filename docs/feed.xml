<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://0qinghao.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://0qinghao.github.io//" rel="alternate" type="text/html" /><updated>2023-03-28T20:58:36+08:00</updated><id>https://0qinghao.github.io//feed.xml</id><title type="html">林间</title><subtitle>林庆毫的个人空间</subtitle><author><name>Qinghao Lin</name></author><entry><title type="html">【NB】11.10 技巧属性大幅改版后 辅助职业产生的严重 bug</title><link href="https://0qinghao.github.io//20221113-NB-1110BUG/" rel="alternate" type="text/html" title="【NB】11.10 技巧属性大幅改版后 辅助职业产生的严重 bug" /><published>2022-11-13T00:00:00+08:00</published><updated>2022-11-13T00:00:00+08:00</updated><id>https://0qinghao.github.io//NB-1110BUG</id><content type="html" xml:base="https://0qinghao.github.io//20221113-NB-1110BUG/">&lt;p&gt;11 月 10 日的小型版本更新中，官方围绕【技巧】这一属性做出了若干修改，例如给赤面增加技巧关联的暗强、给白手部分技能增加技巧关联的攻速…&lt;/p&gt;

&lt;p&gt;虽然算下来数值不高，但这种白送属性的事玩家们自然是喜闻乐见的。&lt;/p&gt;

&lt;h2 id=&quot;技巧改版提升大奶辅助能力&quot;&gt;技巧改版提升大奶辅助能力&lt;/h2&gt;

&lt;p&gt;这之中最让我振奋的是关于奶妈的修改（除了改祝福给新卡让道这点）。作为游戏中唯一一个会去堆技巧属性的职业——辅助奶妈，相比于其他职业的蚊子腿收益，这次技巧改版让认真培养的辅助奶的能力上升了一个台阶，官方确实意识到了大家诟病已久的大奶小奶差距甚小的问题。&lt;/p&gt;

&lt;p&gt;这次技巧改版，【水之祝福】buff 从【伤害增加】变成了【技能伤】，并且在基础数值上额外增加了 5% 技巧比例的技能伤；【海之祭坛】buff 在基础数值上额外增加了 10% 技巧比例的属强。&lt;/p&gt;

&lt;p&gt;一个优秀的辅助奶实战时会有 300% 以上的技巧值，也就是说能比白板奶多出 15% 技能伤和 30% 属强，粗略地可以看作多了一组 3 孔符文的辅助能力。相信未来玩家数值的增加和后续改版会进一步拉开精品奶与混子奶的差距。&lt;/p&gt;

&lt;p&gt;我不由地产生了“一切都好起来了”的感觉，直到，我发现了这个 bug……&lt;/p&gt;

&lt;h2 id=&quot;新瓶装旧酒又是计算对象选错的-bug&quot;&gt;新瓶装旧酒，又是计算对象选错的 bug&lt;/h2&gt;

&lt;p&gt;相信对奶妈有过一定研究的老玩家一定还记得从开服开始，持续了一年左右的【唤水】bug ：&lt;/p&gt;

&lt;p&gt;简单来说，在小半年前修复之前，【唤水】会给队友增加【攻击力】，数值是【智力】* 2.5%&lt;/p&gt;

&lt;p&gt;但那时的致命 bug 是：计算时用的是队友的智力而不是奶妈的智力，也就是说半年前，唤水砸到赤面头上之后，赤面的【攻击力】爆增了 ⑨*2.5%=0.0225 点！&lt;/p&gt;

&lt;p&gt;是的，你没有猜错，这次技巧改版出现了一模一样的 bug。奶妈 buff 增益值的技巧部分在计算时，使用的是队友的【技巧】而不是奶妈的【技巧】。&lt;/p&gt;

&lt;p&gt;也就是说，当你的极品辅助奶妈队友砸了一个祭坛后，你在获得了技能本身的基础属强后，额外获得了（你的技巧值）5.5% * 10% = 0.55% 点属强！而不是理论上的 （奶妈的技巧值）300% * 10% = 30%&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-11-13-21-28-49.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;【水之祝福】的技巧部分也有相同的问题，想要复现又不想双开的朋友，找个奶妈队友进图，分别观察点满潜力技巧前后，自己的技能伤面板变化就能验证了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-11-13-21-31-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果有为数不多的辅助雪崩玩家看到这，肯定想要问【无畏】增加的【所有攻击伤害】技巧部分是不是也有同样的问题。这里直接告诉你答案，是的。图就不上了，很容易就能验证复现。&lt;/p&gt;

&lt;p&gt;最后，还有一个并不是本次更新后出现，而是老早就有，也属于同类的 bug。奶妈【神圣海域】会给队友附加护盾，护盾厚度与【智力】挂钩，这里的计算对象同样错选成了队友的。&lt;/p&gt;

&lt;h2 id=&quot;请尽快修复&quot;&gt;请尽快修复&lt;/h2&gt;

&lt;p&gt;我能理解雷火缺人手，年底了开发任务也重。但我相信工程师们有过小半年前修复【唤水】同类 bug 的经验，这次处理起来应该会得心应手一些。也不求多快，请在新图新团本出来之前修复吧！一个热爱辅助职业的普通玩家的深夜牢骚。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="游戏" /><summary type="html">11 月 10 日的小型版本更新中，官方围绕【技巧】这一属性做出了若干修改，例如给赤面增加技巧关联的暗强、给白手部分技能增加技巧关联的攻速…</summary></entry><entry><title type="html">【NB】转属性符文是否叠加的简单测试及提升率计算</title><link href="https://0qinghao.github.io//20220414-NB-zhuanshuxing/" rel="alternate" type="text/html" title="【NB】转属性符文是否叠加的简单测试及提升率计算" /><published>2022-04-14T00:00:00+08:00</published><updated>2022-04-14T00:00:00+08:00</updated><id>https://0qinghao.github.io//NB-zhuanshuxing</id><content type="html" xml:base="https://0qinghao.github.io//20220414-NB-zhuanshuxing/">&lt;p&gt;2022.4.14 日的例行维护 log 中，出现了一条描述极其模糊的条目：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;修复了符文[深渊]、[寒冰]、[业火]、[辉光]同时使用，效果未能正常运用于所有技能的问题。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这描述一度让人以为 4 个转属性符文能使最终伤害同时吃 4 个加成，即打上水暗火符文后，【光电鳗】的伤害变成 x * (1 + 水强% + 光强% + 火强% + 暗强%)。&lt;/p&gt;

&lt;p&gt;但是经过我和其他吧友的简单测试，这纯属无稽之谈，现在还是和更新前一样，吃最高的。至于有部分玩家感觉更新完伤害更高了，有可能是因为官方还修复了 A 属性转 B 属性随动的 bug，这涉及到振奋、放流、高爆以及所有穿属强套的玩家。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-45-58.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;经吧友提醒，上述描述修复的可能是另一个大部分玩家不会碰到的 bug：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-16-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来描述我进行的测试。&lt;/p&gt;

&lt;p&gt;天空塔 1 层；
技能点清空；
卡牌清空；
装备只带 3 件防具，且这 3 件不会触发任何影响测试的 buff；
使用【无属性 旗鱼】【暗属性 墨汁弹】【光属性 电鳗】测试打【符文：寒冰】后是否会叠加吃原属性和水属性 2 种属强；&lt;/p&gt;

&lt;p&gt;打满【寒冰】前：&lt;/p&gt;

&lt;p&gt;测试数据及其中一次墨汁弹伤害：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-23-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-24-41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打满【寒冰】后：&lt;/p&gt;

&lt;p&gt;测试数据及其中一次墨汁弹伤害：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-26-53.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-27-41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关键数据：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-28-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;面板、buff 栏全在截图中有，可验证。&lt;/p&gt;

&lt;p&gt;接下来是紧张刺激的计算验证环节。&lt;/p&gt;

&lt;p&gt;如果不叠加，即打了【寒冰】后，水强达到 100.27%，远高于其他。【墨汁弹】会从吃 35.65% 的暗强变为吃 100.27% 的水强，提升率是 (1+100.27%)/(1+35.65%)-1=47.64%。&lt;/p&gt;

&lt;p&gt;类似地，电鳗从吃光变吃水，旗鱼从吃无变吃水，理论数据如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-31-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果叠加，即打了【寒冰】后，【墨汁弹】同时吃 35.65% 的暗强和 100.27% 的水强，提升率是 75.31%，理论数据如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-33-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;理论计算完毕，我们来对比实际数据：&lt;/p&gt;

&lt;p&gt;打【寒冰】后，【墨汁弹】伤害从 2603 提升到 3850，提升率 47.89%，与不叠加的理论值误差 0.2%，严格控制变量就能得出精确的结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-33-54.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此得出结论：&lt;/p&gt;

&lt;p&gt;属强转换符文的效果仍是使技能吃转换属强，不叠加多属强。&lt;/p&gt;

&lt;p&gt;这类符文带来的收益大小，计算起来十分方便，简单来说就是转换前后两属性差值越大提升越大，一般差 50%（或者实战状态下叠满 buff 差 100%） 以上才会有比较明显的效果，否则不如打本职业符文。&lt;/p&gt;

&lt;p&gt;另外，附上 xls 公式审阅，欢迎 debug：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-04-14-16-39-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后话：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;大部分人没有认真在玩这个游戏（当然这个睿智策划确实不值得我们认真去玩！）。他们不理解一个 buff/debuff 的实战效果；不理解什么叫做控制变量；不理解奶妈在什么情况下几乎没作用，在什么情况下顶 2 个队友；不理解强化的收益；不理解什么时候需要主属性；不理解六边形战士……&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我是傻x，为什么浪费时间和钱做这个显而易见的测试&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Qinghao Lin</name></author><category term="游戏" /><summary type="html">2022.4.14 日的例行维护 log 中，出现了一条描述极其模糊的条目：</summary></entry><entry><title type="html">【NB】蓝鹰对怪易伤 debuff 的测试及杂谈</title><link href="https://0qinghao.github.io//20220321-NB-lanying-debuff/" rel="alternate" type="text/html" title="【NB】蓝鹰对怪易伤 debuff 的测试及杂谈" /><published>2022-03-21T00:00:00+08:00</published><updated>2022-03-21T00:00:00+08:00</updated><id>https://0qinghao.github.io//NB-lanying-debuff</id><content type="html" xml:base="https://0qinghao.github.io//20220321-NB-lanying-debuff/">&lt;p&gt;蓝鹰对队友的 buff 已经被大家讨论得很多了，【伤害增加】【所有技能伤害】【所有属性强化】【攻击力】【攻击速度】，这些独立乘区算下来对最终输出的提升在 300% 左右（指满符文），加上最近【唤水】的修复，【攻击力】这个之前比较弱小的乘区，现在也提供了不菲的加成。当然不同职业有不同程度的稀释，这个数值仅供参考，精确的数值需要看实战状态的面板。&lt;/p&gt;

&lt;p&gt;蓝鹰给怪挂的 debuff 也同样强力，但由于测试比较繁琐，暂时没看到可靠的实战数据。因此这里总结一下我做的几个小测试，希望对关注这个问题的玩家有帮助。&lt;/p&gt;

&lt;h3 id=&quot;蓝鹰的几个对怪易伤-debuff&quot;&gt;蓝鹰的几个对怪易伤 debuff&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;水炮&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-19-25.png&quot; alt=&quot;&quot; /&gt;
 【所有属性抗性减少】30%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;水狱&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-21-36.png&quot; alt=&quot;&quot; /&gt;
 【所有属性抗性减少】20%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;虚弱之水&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-22-26.png&quot; alt=&quot;&quot; /&gt;
 【所有属性抗性减少】9%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;冰霜结晶&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-25-26.png&quot; alt=&quot;&quot; /&gt;
 【所受伤害增加】10%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;珍珠中的加勒比&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-27-06.png&quot; alt=&quot;&quot; /&gt;
 【所受伤害增加】30.5%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;裁决金锤&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-28-13.png&quot; alt=&quot;&quot; /&gt;
 【所受伤害增加】45%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;轮回道场&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-29-11.png&quot; alt=&quot;&quot; /&gt;
 【所受伤害增加】5%&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;debuff-的单独测试&quot;&gt;debuff 的单独测试&lt;/h3&gt;

&lt;p&gt;首先测试 7 个 debuff 单独生效时的效果，毕竟这游戏文本与实际不符也不是一次两次了。&lt;/p&gt;

&lt;p&gt;测试对象是天空塔第 1 层，第 23 层，不要问我为什么，随便挑的。测试时除了必要的装备和技能，其他配置全部清空。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-38-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好在非常顺利，所有的 7 个 debuff 文本与实际相符。【所有属性抗性减少】和【所受伤害增加】都使伤害提升了与文本一致的数值。&lt;/p&gt;

&lt;p&gt;这里另外说一句，【所有属性抗性减少】对无属性的伤害同样生效。&lt;/p&gt;

&lt;h3 id=&quot;debuff-加算乘算的测试&quot;&gt;debuff 加算乘算的测试&lt;/h3&gt;

&lt;p&gt;我们可以合理地猜测，所有的【所有属性抗性减少】都属于同一乘区，是加算的。&lt;/p&gt;

&lt;p&gt;让怪同时挂上【水炮】（30%）和【水狱】（20%）两个 debuff，测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-47-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接近 50%，符合加算的猜想。&lt;/p&gt;

&lt;p&gt;让怪同时挂上【水炮】（30%）和【水狱】（20%）和【虚弱之水】（只打了2个符文，5%）三个 debuff，测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-50-27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比理论 55% 略高一些，是因为打了虚弱之水的装备触发了智力 buff。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结论1：【所有属性抗性减少】的 3 个 debuff 属于同一乘区，加算。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;同样地，合理猜测所有的【所受伤害增加】都属于同一乘区，是加算的。&lt;/p&gt;

&lt;p&gt;让怪同时挂上【冰霜结晶】（10%）和【轮回道场】的【唤水】（5%）测试，增伤 14.71%≈15%&lt;/p&gt;

&lt;p&gt;让怪同时挂上【裁决金锤】的【神圣海域】（45%）和【冰霜结晶】（10%）测试，增伤 53.86≈55%&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-16-54-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结论2：【所受伤害增加】的 4 个 debuff 属于同一乘区，加算。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最后，测试【所有属性抗性减少】和【所受伤害增加】是否属于各自独立的乘区。&lt;/p&gt;

&lt;p&gt;测到这里已经累了，所以只测试了【裁决金锤】的【所受伤害增加45%】和水炮的【所有属性抗性减少30%】一起生效的情况：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-03-26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.45*1.3=1.885，乘算。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;结论3：【所受伤害增加】和【所有属性抗性减少】属于两个独立的乘区，乘算。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;杂谈关于虹吸装置&quot;&gt;杂谈：关于【虹吸装置】&lt;/h3&gt;

&lt;p&gt;150 粉武中，【裁决金锤】和【虹吸装置】特效十分亮眼。&lt;/p&gt;

&lt;p&gt;【虹吸装置】的描述是【10 米内】我方的【武器攻击力提升】40%。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-44-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个【10 米】的范围有多大？【武器攻击力】和【攻击力】有什么区别吗？&lt;/p&gt;

&lt;p&gt;测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-45-57.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;【10米】范围非常可观，大致是【云耀乱刀】的范围。&lt;/p&gt;

&lt;p&gt;接下来看攻击力增加的数值：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-47-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;结论：【武器攻击力增加40%】其实就是【攻击力增加40%】。&lt;/p&gt;

&lt;p&gt;还有一条附带的结论：这个 buff 不会触发【海洋守护者】的减 cd，当然，也不触发守护者给自己的其他效果（回血、减伤）。本来还想用它替代唤水刷 CD，结果行不通。&lt;/p&gt;

&lt;p&gt;最后，有人说这个 40% 攻击力的 buff 必须保持【虹吸装置】装在身上才行，换回双星队友就没 buff 了。真的吗？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-50-45.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;触发 buff 后马上切换武器，自己的 buff 确实消失了，但是队友的还在~&lt;/p&gt;

&lt;h3 id=&quot;杂谈关于最强音&quot;&gt;杂谈：关于【最强音】&lt;/h3&gt;

&lt;p&gt;符文【最强音】的效果是【海之歌】生效时，我方的攻击力增加 27%&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-17-57-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是具体生效的范围是多大呢？测试结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-18-00-32.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;范围和【海之歌】一致，非常小，可以理解为【最强音】就是给【海之歌】的 buff 增加了一条攻击力提升。如果说【虹吸装置】是【10 米】，那【最强音】大概是【3 米】。&lt;/p&gt;

&lt;p&gt;再来讨论一下数值，27% 攻击力提升大吗？根据吧友的参考信息，27% 的攻击力稀释下来对最终输出的提升在 10% 左右，如果是铁拳这种攻击力乘区稀释严重的职业，增幅会更小。&lt;/p&gt;

&lt;p&gt;还有一点，【海之歌】是有 30 秒 cd 的，在团本中可以通过上 buff 刷 cd，但也确实存在一定的真空期。综上，【最强音】的实战增幅砍一半，算 5% 不过分吧。&lt;/p&gt;

&lt;p&gt;因此，我个人看来，【最强音】并不是很优秀的辅助符文，我选择不打。非要打的话优先级也很低，最多在出齐红装后补上。&lt;/p&gt;

&lt;h3 id=&quot;杂谈大海啸与平-a&quot;&gt;杂谈：【大海啸】与平 A&lt;/h3&gt;

&lt;p&gt;在征服者大行其道的版本，如何提升平 A 伤害也是个热门话题。&lt;/p&gt;

&lt;p&gt;吧里偶尔会出现【大海啸】对平 A 无效的说法，理由是平 A 不属于【技能】……&lt;/p&gt;

&lt;p&gt;其实只要搞清楚【所有技能伤害】对平 A 有没有加成就行了。测试结果：有&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-18-28-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;杂谈队友不享受觉醒的易伤&quot;&gt;杂谈：队友不享受觉醒的易伤？&lt;/h3&gt;

&lt;p&gt;测试结果：享受。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022-03-21-20-03-58.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有人说团本不吃，还不确定。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="游戏" /><summary type="html">蓝鹰对队友的 buff 已经被大家讨论得很多了，【伤害增加】【所有技能伤害】【所有属性强化】【攻击力】【攻击速度】，这些独立乘区算下来对最终输出的提升在 300% 左右（指满符文），加上最近【唤水】的修复，【攻击力】这个之前比较弱小的乘区，现在也提供了不菲的加成。当然不同职业有不同程度的稀释，这个数值仅供参考，精确的数值需要看实战状态的面板。</summary></entry><entry><title type="html">值得一记的 vim 使用技巧</title><link href="https://0qinghao.github.io//20200802-vim-technique/" rel="alternate" type="text/html" title="值得一记的 vim 使用技巧" /><published>2020-08-02T00:00:00+08:00</published><updated>2020-08-02T00:00:00+08:00</updated><id>https://0qinghao.github.io//vim-technique</id><content type="html" xml:base="https://0qinghao.github.io//20200802-vim-technique/">&lt;p&gt;记录一些 vim 使用过程中发现的，让自己感叹“原来还可以这样”的一些技巧，时常更新。&lt;/p&gt;

&lt;h3 id=&quot;对括号内的文本操作&quot;&gt;对括号内的文本操作&lt;/h3&gt;

&lt;p&gt;不仅限括号，可理解为成对符号内的文本操作。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;功能&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ci(&lt;/td&gt;
      &lt;td&gt;修改 () 内的文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;di(&lt;/td&gt;
      &lt;td&gt;删除 () 内的文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;yi(&lt;/td&gt;
      &lt;td&gt;复制 () 内的文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vi(&lt;/td&gt;
      &lt;td&gt;选中 () 内的文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ci”&lt;/td&gt;
      &lt;td&gt;修改 “” 内的文本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ci[&lt;/td&gt;
      &lt;td&gt;修改 [] 内的文本&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;数值自增--自减&quot;&gt;数值自增 / 自减&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;功能&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;往后查找第一个数字，并使其 +1 （会识别数字的正负性）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt;
      &lt;td&gt;往后查找第一个数字，并使其 -1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;移动到空行&quot;&gt;移动到空行&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;功能&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;{&lt;/td&gt;
      &lt;td&gt;移动到上一个空行&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;}&lt;/td&gt;
      &lt;td&gt;移动到下一个空行&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;基于当前屏幕的定位&quot;&gt;基于当前屏幕的定位&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;功能&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;（保持屏幕不动） 光标移动到屏幕顶部&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;光标移动到屏幕中间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;光标移动到屏幕底部&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zt&lt;/td&gt;
      &lt;td&gt;（使屏幕滚动） 将当前行置于屏幕顶部&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zz&lt;/td&gt;
      &lt;td&gt;将当前行置于屏幕中间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zb&lt;/td&gt;
      &lt;td&gt;将当前行置于屏幕底部&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Qinghao Lin</name></author><category term="vim" /><category term="linux" /><summary type="html">记录一些 vim 使用过程中发现的，让自己感叹“原来还可以这样”的一些技巧，时常更新。</summary></entry><entry><title type="html">在基于 Jekyll 的博客中加入文字的注音</title><link href="https://0qinghao.github.io//20200724-add-ruby-in-jekyll-based-blog/" rel="alternate" type="text/html" title="在基于 Jekyll 的博客中加入文字的注音" /><published>2020-07-24T00:00:00+08:00</published><updated>2020-07-24T00:00:00+08:00</updated><id>https://0qinghao.github.io//add-ruby-in-jekyll-based-blog</id><content type="html" xml:base="https://0qinghao.github.io//20200724-add-ruby-in-jekyll-based-blog/">&lt;p&gt;越来越多的人选择将博客托管在 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub page&lt;/a&gt; 或是国内的 &lt;a href=&quot;https://help.coding.net/docs/devops/cd/static-website.html&quot;&gt;Coding page&lt;/a&gt;，通过 Jekyll 将 markdown 排版的文章渲染为静态网页。
当一个 repo 被你设定为 GitHub page 时，GitHub 将检测 repo 的目录结构，如果符合 Jekyll 的特征，例如根目录下包含 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 配置时，GitHub 将在你 push 后自动进行在线构建。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-23-20-40-26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;查看 repo 的提交历史将能看到构建成功的消息，如果构建失败则会收到一封邮件报告。因此理论上我们在本地甚至不需要配置 Jekyll 环境，只需要保证 push 的内容具备让 GitHub 进行在线构建的条件即可。&lt;/p&gt;

&lt;h3 id=&quot;在线构建的局限性&quot;&gt;在线构建的局限性&lt;/h3&gt;

&lt;p&gt;将构建的任务交给 GitHub 确实十分方便，也能满足绝大部分用户的需求。但我们注意到 GitHub 提供的在线构建服务并不支持所有 Jekyll 插件，支持列表可以在这里查询：&lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;https://pages.github.com/versions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;而很不幸的是，有一个插件对我来说是必不可少的，而它却不在支持列表中。这个插件是 &lt;a href=&quot;https://github.com/guentoan/jekyll-furigana&quot;&gt;jekyll-furigana&lt;/a&gt;，用于给文本注音，主要应用场景有：&lt;/p&gt;

&lt;p&gt;( 日本語:にほんご )の( 漢字:かんじ )に( 振:ふ )り( 仮名:がな )を( 編集:へんしゅう )する&lt;/p&gt;

&lt;p&gt;( 中:zhōng )( 文:wén )拼音注音&lt;/p&gt;

&lt;p&gt;( 奇奇怪怪的用法:😀😁🤣😑🤨😮😶 )&lt;/p&gt;

&lt;p&gt;幸运的是 GitHub page 支持关闭在线构建，代价则是用户必须在本地配置好 Jekyll 环境，构建、推送构建完成的静态网页到 GitHub page repo。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/github/working-with-github-pages/about-github-pages-and-jekyll#plugins&quot;&gt;GitHub Pages cannot build sites using unsupported plugins. If you want to use unsupported plugins, generate your site locally and then push your site’s static files to GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;配置-jekyll-furigana-插件&quot;&gt;配置 jekyll-furigana 插件&lt;/h3&gt;

&lt;p&gt;配置 Jekyll 插件的前提当然是配置好本地 Jekyll 环境。这里默认大家已经配置好了，如果还没配置的可以跟着&lt;a href=&quot;http://jekyllcn.com/docs/installation/&quot;&gt;官方文档&lt;/a&gt;做，这里只描述插件的配置方法。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在 Gemfile 中配置 jekyll-furigana 插件
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://rubygems.org'&lt;/span&gt;
 gem &lt;span class=&quot;s1&quot;&gt;'github-pages'&lt;/span&gt;, group: :jekyll_plugins
 gem &lt;span class=&quot;s1&quot;&gt;'tzinfo-data'&lt;/span&gt;
 gem &lt;span class=&quot;s1&quot;&gt;'jekyll-furigana'&lt;/span&gt;, group: :jekyll_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;安装
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在 Jekyll 配置文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plugins:&lt;/code&gt; 部分配置插件
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; plugins:
     - jekyll-github-metadata
     - rouge
     - jekyll-paginate
     - jekyll-sitemap
     - jekyll-feed
     - jemoji
     - jekyll-furigana
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在需要启用注音功能的 markdown 博客文件头中加入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;furigana: true&lt;/code&gt;
    &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt; ---&lt;/span&gt;
 layout: post
 title: 在基于 Jekyll 的博客中加入文字的注音
 categories: [日语]
 furigana: true
&lt;span class=&quot;p&quot;&gt; ---
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts/post.html&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content&lt;/code&gt; 过滤器，加入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;furigana&lt;/code&gt; 过滤器
 &lt;img src=&quot;/assets/images/2020-07-24-20-20-27.png&quot; alt=&quot;&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;默认情况下是修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post.html&lt;/code&gt; 文件，如果你的 markdown 文件头中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout&lt;/code&gt; 属性不是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post&lt;/code&gt; 那就要去修改对应的文件。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;使用方法&quot;&gt;使用方法&lt;/h3&gt;

&lt;p&gt;jekyll-furigana 插件有多种使用格式，可选用下面任意一种。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-24-20-23-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;他们在启用了插件的页面上，都将被渲染为：&lt;/p&gt;

&lt;p&gt;(日本語:にほんご)&lt;/p&gt;

&lt;h3 id=&quot;编译静态网页推送到-github-page-repo&quot;&gt;编译静态网页推送到 GitHub page repo&lt;/h3&gt;

&lt;p&gt;在根目录下编译静态网页，输出到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./docs&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll build &lt;span class=&quot;nt&quot;&gt;--destination&lt;/span&gt; ./docs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docs&lt;/code&gt; 文件夹内的内容推送到 GitHub page repo&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ./docs

git init

git add &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;

git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test furigana&quot;&lt;/span&gt;

git remote add origin https://your-repo-url.git

git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;大约 2 分钟之后，即可打开网页检查插件是否生效。&lt;/p&gt;

&lt;p&gt;最后，感谢你阅读文章。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="日语" /><category term="linux" /><summary type="html">越来越多的人选择将博客托管在 GitHub page 或是国内的 Coding page，通过 Jekyll 将 markdown 排版的文章渲染为静态网页。</summary></entry><entry><title type="html">vim 在 Verilog 中的应用——生成相似代码</title><link href="https://0qinghao.github.io//20200723-vim-app-in-verilog-generate-similar-code/" rel="alternate" type="text/html" title="vim 在 Verilog 中的应用——生成相似代码" /><published>2020-07-23T00:00:00+08:00</published><updated>2020-07-23T00:00:00+08:00</updated><id>https://0qinghao.github.io//vim-app-in-verilog-generate-similar-code</id><content type="html" xml:base="https://0qinghao.github.io//20200723-vim-app-in-verilog-generate-similar-code/">&lt;p&gt;vim 作为最出色的文本编辑器之一，有着丰富的内置命令和各色各样的开源插件，可以说是杀鸡屠龙无所不能。
但同时 vim 的入门门槛高、学习曲线陡峭，也使得许多人或是望而生畏，或是浅尝辄止。当然也包括我，我在本科阶段第一次接触 vim 的时候，多半是带着一些“装x”的中二情感在强行用，直到最近才开始系统地学习、使用。目前使用的模式是在 VSCode 中激活&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&quot;&gt; vim 键映射&lt;/a&gt;，虽然有很多大牛选择从零将 vim 打造成完整的 IDE，但我始终认为 vim 的强处在于文本处理，IDE 部分还是交给 VSCode 吧。&lt;/p&gt;

&lt;p&gt;回到正题，我的主要开发语言是 Verilog，在 Verilog 代码中经常会出现一整段十分相似的代码，一般是只有数字编号不同的内容。例如在对一整组信号做打拍时，这种时候可以应用 vim 的宏功能来快速生成代码。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// s0-s15 打一拍&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s0_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s1_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s2_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s3_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s4_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s5_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s6_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s7_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s8_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s9_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s10_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s11_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s12_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s13_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s14_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s15_d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;预备知识&quot;&gt;预备知识&lt;/h2&gt;

&lt;h3 id=&quot;vim-宏&quot;&gt;vim 宏&lt;/h3&gt;

&lt;p&gt;vim 处于 normal 模式时，按 &lt;kbd&gt;q&lt;/kbd&gt; &lt;kbd&gt;1&lt;/kbd&gt; 将进入宏录制模式，vim 会录制此后所有操作到宏 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; 中。当然 &lt;kbd&gt;1&lt;/kbd&gt; 键可以任意替换，相应的宏也会录制到对应的键中。录制过程中再次按 &lt;kbd&gt;q&lt;/kbd&gt; 将结束录制，此后可通过 &lt;kbd&gt;@&lt;/kbd&gt; &lt;kbd&gt;1&lt;/kbd&gt; 的方式执行录制的内容。和 vim 中其他命令一样，可以在其前加上任意数字 n 表示重复执行 n 次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-23-12-24-21.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vim-数字自增功能&quot;&gt;vim 数字自增功能&lt;/h3&gt;

&lt;p&gt;这大概是个比较冷门的功能，很少看见有人提到，但却意外地挺有用。&lt;/p&gt;

&lt;p&gt;normal 模式下，&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;a&lt;/kbd&gt; 将从当前光标处往后查找第一个数字，并且将其 +1。类似地，&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt; 实现查找、-1 的功能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-23-12-33-50.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;生成相似代码段&quot;&gt;生成相似代码段&lt;/h2&gt;

&lt;p&gt;应用上述两个 vim 功能，即可很方便地生成前言中一组信号打拍的代码块。基本思路是写好第一行之后：复制当前行 → 粘贴 → 找到数字自增，重复这三个操作。因此录制并重复执行的内容就是上述 3 步，具体实现过程如下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-23-13-13-18.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;小结&quot;&gt;小结&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;vim 宏录制&lt;/li&gt;
  &lt;li&gt;vim 中的数字自增 / 自减&lt;/li&gt;
  &lt;li&gt;找到代码中的规律，使其自动生成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，感谢你阅读文章。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="vim" /><category term="verilog" /><category term="linux" /><summary type="html">vim 作为最出色的文本编辑器之一，有着丰富的内置命令和各色各样的开源插件，可以说是杀鸡屠龙无所不能。</summary></entry><entry><title type="html">译 - 使用 iStyle 格式化 Verilog 代码</title><link href="https://0qinghao.github.io//20190809-translate-use-istyle-to-format-verilog-code/" rel="alternate" type="text/html" title="译 - 使用 iStyle 格式化 Verilog 代码" /><published>2019-08-09T00:00:00+08:00</published><updated>2019-08-09T00:00:00+08:00</updated><id>https://0qinghao.github.io//translate-use-istyle-to-format-verilog-code</id><content type="html" xml:base="https://0qinghao.github.io//20190809-translate-use-istyle-to-format-verilog-code/">&lt;blockquote&gt;
  &lt;p&gt;原文：&lt;a href=&quot;https://qiita.com/kkumt93/items/70766645c07c298d19c3&quot;&gt;Verilog でコード整形&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;安装&quot;&gt;安装&lt;/h1&gt;

&lt;p&gt;iStyle 可以从 GitHub 上 clone、make 自行编译出可执行文件，也可以直接下载已编译好的可执行文件。这里都给出来。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;https://github.com/thomasrussellmurphy/istyle-verilog-formatter&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;可执行文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;https://github.com/0qinghao/istyle-verilog-formatter/releases/tag/v1.21_x86_64&lt;/p&gt;

&lt;h1 id=&quot;格式化选项&quot;&gt;格式化选项&lt;/h1&gt;

&lt;p&gt;以下是一些格式化时常用的选项及效果示例。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;待格式化代码&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;--style&quot;&gt;--style&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ANSI style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=ansi test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Kernighan&amp;amp;Ritchie style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=kr test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;GNU style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=gnu test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-s&quot;&gt;-s&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle -s2 test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该选项指定缩进时的空格数量，-s2 表示每次缩进使用 2 个空格（如果是 - s4 则表示每次用 4 个空格缩进）。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-p&quot;&gt;-p&lt;/h2&gt;

&lt;p&gt;-p 选项指定在运算符两侧插入空格。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-p-1&quot;&gt;-P&lt;/h2&gt;

&lt;p&gt;-P 选项指定在运算符和括号周围插入空格。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;虽然文中没有写，&lt;strong&gt;module&lt;/strong&gt; 声明的缩进感觉并不是很好。verilog 有各种各样的代码风格，因此有一个强大的格式化程序是很有用的。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="verilog" /><summary type="html">原文：Verilog でコード整形</summary></entry><entry><title type="html">记一篇日语短文</title><link href="https://0qinghao.github.io//20190625-2017-07-jlpt-n2/" rel="alternate" type="text/html" title="记一篇日语短文" /><published>2019-06-25T00:00:00+08:00</published><updated>2019-06-25T00:00:00+08:00</updated><id>https://0qinghao.github.io//2017-07-jlpt-n2</id><content type="html" xml:base="https://0qinghao.github.io//20190625-2017-07-jlpt-n2/">&lt;p&gt;今年（2019）7 月的 JLPT 也快要开始了，我最重要的一个 emmm… 朋友，参加这次的 N2 考试，祝愿拿到好成绩。💪😊&lt;/p&gt;

&lt;p&gt;两年前，大三的暑假，似乎比今年的夏天更加闷热一些，我第一次参加 JLPT，也是 N2。糊里糊涂刷了不到半本红蓝宝书，外加几套真题，就这样跑去另一个校区考试了。（考试前一天有点感冒，突然发烧头痛，好在睡了一下午就好了很多，想想自己当时也是心大😂）&lt;/p&gt;

&lt;p&gt;那次的 N2 似乎比往年真题简单一些，接近 3 小时的答题时间过得还算舒适，本科 3 年各种突击应付式的考试都快让我忘记了这种——沉浸在试题里的紧张、兴奋和满足感。&lt;/p&gt;

&lt;p&gt;那年的最后一篇长阅读（除去海报内容理解那篇）答得很开心，难度适中，文笔优美（按我的审美来说😂）。尽管是篇鸡汤文，但也强烈地让我想去拜读一下原作，可惜当时没能把出处记下来，也没办法 Google 到。最近不知为何又突然想起这篇文章，遂找出了当年的真题卷重温一遍，顺手在这做一下记录。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;​	人生はいつも旅になぞらえられる。&lt;/p&gt;

&lt;p&gt;​	人は人生という旅路を、地図もなく歩いている。誰しもそうだし、それが人間としては自然な姿である。人生に地図などあるわけがない。なのに人は、人生の地図を持とうとするのが常だ。暗闇の中を歩くのが不安で仕様がないのだ。迷ってしまった時の恐怖を想像したくないからだ。&lt;/p&gt;

&lt;p&gt;​	そして自分の地図には、人生の設計図としてわがままな道程が記されている。三十歳までには結婚し、三十五歳頃には二人の子どもをもつ。四十歳には課長になり、五十歳までには何とか部長に昇進する。&lt;/p&gt;

&lt;p&gt;​	（中略）&lt;/p&gt;

&lt;p&gt;​	人生の地図に描かれた道を、その通りに歩むことができるなら、そんなに楽なことはない。一度も脇道にそれずに、ただまっすぐに歩くことができるのなら、人は何も悩まなくても済むだろう。そんな人生を送る人間は、おそらくこの世に一人もいない。もしそういう人間がいるのだとしたら、それはその人間の人生ではない。その人生は他人から与えられたものに過ぎない。&lt;/p&gt;

&lt;p&gt;​	五十歳の時には部長になっている。これは今という現在地から見た目標であろう。目標を持つことはもちろん大切なことだ。しかし、その目標へ辿り着く道は決して一本ではない。五十歳という現在地に立った時、もし部長になっていなければどうするのか。一枚の地図しか持っていない人、あるいは決して地図を書き変えようとしない人は、そこで人生の現在地を見失ってしまうだろう。｢今、自分はこの場所にいるはずなのに、全く違う所に来てしまった｣と、そんな思いに囚われてしまい、行くべき道も見失ってしまうのである。&lt;/p&gt;

&lt;p&gt;​	地図を持たない人生が不安であるならば、地図を持てばいいだけのことだ。しかし、その一枚の地図にこだわってはならない。常に現在地を確認しながら、どんどん地図を変えていくことだ。&lt;/p&gt;

&lt;p&gt;​	少し脇道に入ってしまったのなら、その脇道を歩いてみればいい。無理をして元の道に戻ろうとしても、余計に迷うだけだ。脇道を歩いているうちに、いつの間にか元の道に戻ることもあるだろうし、また別の大通りに出会うこともあるだろう。人生には数え切れないほどの道があることを知っておいたほうがいい。今いる場所さえしっかりと認識できていれば、人はどんな道だって歩いていくことができるものだ。&lt;/p&gt;

&lt;p&gt;（立松平和『人生の現在地 — まだまだ迷っているぞ、私は。』による）&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="日语" /><summary type="html">今年（2019）7 月的 JLPT 也快要开始了，我最重要的一个 emmm… 朋友，参加这次的 N2 考试，祝愿拿到好成绩。💪😊</summary></entry><entry><title type="html">配置澎峰 Perf-V 开发板 RISC-V 开发环境</title><link href="https://0qinghao.github.io//20181030-per-f-risc-v-dev-env/" rel="alternate" type="text/html" title="配置澎峰 Perf-V 开发板 RISC-V 开发环境" /><published>2018-10-30T00:00:00+08:00</published><updated>2018-10-30T00:00:00+08:00</updated><id>https://0qinghao.github.io//per-f-risc-v-dev-env</id><content type="html" xml:base="https://0qinghao.github.io//20181030-per-f-risc-v-dev-env/">&lt;p&gt;实验室买了一块 Perf-V 开发板，准备开始做 RISC-V 相关的工作。&lt;/p&gt;

&lt;p&gt;虽然澎峰直接给了配置好的虚拟机开发环境，不过因为 Ubuntu16.03 用着不顺手就想要自己把环境配出来。&lt;/p&gt;

&lt;p&gt;看澎峰给的 SDK 目录，就是直接用的开源蜂鸟（GitHub：e200_opensource）微调来的。所以最初尝试着 git e200_opensource 重新配置一遍，结果失败，报错找不到’cc1’。尝试添加 PATH 等操作无果。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;riscv-none-embed-gcc: error trying to exec ‘cc1’: execvp: No such file or directory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;后尝试直接把给的环境升级到 18.04，结果出现与上述相同的问题。&lt;/p&gt;

&lt;p&gt;那行吧，既然 sirv-e-sdk 和 Perf-V-e-sdk 都是从 SIFIVE 的 freedom-e-sdk（GitHub：freedom-e-sdk）精简来的，那我就配置整个 freedom-e-sdk 吧。&lt;/p&gt;

&lt;p&gt;总之这几天为了搞定 Perf-V 开发板的开发环境，前前后后踩了不少坑。现在把最后结果记录如下，备忘。&lt;/p&gt;

&lt;h1 id=&quot;克隆-freedom-e-sdk-存储库&quot;&gt;克隆 freedom-e-sdk 存储库&lt;/h1&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt; https://github.com/sifive/freedom-e-sdk.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;文件大，耗时比较长。&lt;/p&gt;

&lt;h1 id=&quot;从源代码构建-tools&quot;&gt;从源代码构建 Tools&lt;/h1&gt;

&lt;p&gt;Ubuntu 需要这些 packages：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;autoconf automake libmpc-dev libmpfr-dev libgmp-dev gawk bison flex texinfo libtool libusb-1.0-0-dev make g++ pkg-config libexpat1-dev zlib1g-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;build：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd freedom-e-sdk
make tools [BOARD=freedom-e300-hifive1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;build 过程耗时很长。&lt;/p&gt;

&lt;h1 id=&quot;替换板级支持包&quot;&gt;替换板级支持包&lt;/h1&gt;

&lt;p&gt;freedom-e-sdk 是 SIFIVE 的开发环境，里面的板级支持包只有 sifive 系列，要用来开发 Perf-V 需要先替换 bsp 文件夹。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv ./bsp ./bsp_bak
cp -r ~/fengniao/e200_opensource/Perf-V-e-sdk/bsp ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以把 Perf-V 开发板自带的几个程序顺便复制过来，方便之后测试。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv ./software ./software_bak
cp -r ~/fengniao/e200_opensource/Perf-V-e-sdk/software ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;pc-和开发板的连接&quot;&gt;PC 和开发板的连接&lt;/h1&gt;

&lt;p&gt;如果手头上有胡振波大大《RISC-V 处理器》这本书的同学，请翻到 P318，18.3 节提到了他们的开发板是怎么配置和 PC 连接的。基本上照做就行了，可是别忘了，他们的开发板是 Arty，虽然澎峰用的也是 A7，但是板子 ID 可不一样，所以有 2 个参数要注意了。&lt;/p&gt;

&lt;p&gt;我这就照着书上的步骤 2 到 6 简单写一下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤二：通电；点 USB 图标连接至虚拟机&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤三：使用如下命令查看 USB 状态&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsusb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bus 001 Device 002: ID 0403:6010 Future Technology Devices International, Ltd FT2232C Dual USB-UART/FIFO IC&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;记下 0403:6010 这两个数。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤四：设置 udev rules，使 USB 能够被 plugdev group 访问&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/udev/rules.d/99-openocd.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 写入以下内容，注意 0403 和 6010，和书上不一样
SUBSYSTEM==&quot;usb&quot;, ATTR{idVendor}==&quot;0403&quot;,
ATTR{idProduct}==&quot;6010&quot;, MODE=&quot;664&quot;, GROUP=&quot;plugdev&quot;
SUBSYSTEM==&quot;tty&quot;, ATTRS{idVendor}==&quot;0403&quot;,
ATTRS{idProduct}==&quot;6010&quot;, MODE=&quot;664&quot;, GROUP=&quot;plugdev&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;步骤五：看看 USB 设备所属组，略&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤六：把自己的用户添加到组中&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo usermod -a -G plugdev 你的用户名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;编译上传裸机-risc-v-程序&quot;&gt;编译上传裸机 RISC-V 程序&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd freedom-e-sdk
make software PROGRAM=demo_gpio BOARD=Perf-V-creative-board
make upload PROGRAM=demo_gpio BOARD=Perf-V-creative-board
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Qinghao Lin</name></author><category term="risc-v" /><category term="linux" /><summary type="html">实验室买了一块 Perf-V 开发板，准备开始做 RISC-V 相关的工作。</summary></entry><entry><title type="html">在 Windows 命令行、Linux 终端使用代理</title><link href="https://0qinghao.github.io//20180919-proxy-set-in-windows-and-linux/" rel="alternate" type="text/html" title="在 Windows 命令行、Linux 终端使用代理" /><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><id>https://0qinghao.github.io//proxy-set-in-windows-and-linux</id><content type="html" xml:base="https://0qinghao.github.io//20180919-proxy-set-in-windows-and-linux/">&lt;p&gt;在之前的博文中分享了如何 &lt;a href=&quot;https://0qinghao.github.io/inforest/2018/02/27/google-cloud-engine-ss-server/&quot;&gt;使用 Google 云计算引擎搭建 SS 服务器&lt;/a&gt;，如何 &lt;a href=&quot;https://0qinghao.github.io/inforest/2018/03/06/shadowsocks-clients/&quot;&gt;使用 SS 客户端&lt;/a&gt;，已经满足了科学上网的基本需求。这次将要总结在 Windows 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt; 窗口和 Linux 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LX 终端 &lt;/code&gt; 中，让 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; 等命令使用代理需要进行的一些配置。&lt;/p&gt;

&lt;h1 id=&quot;windows-命令行代理&quot;&gt;Windows 命令行代理&lt;/h1&gt;

&lt;p&gt;假设你已经使用了 SS 客户端，本地 socks5 代理为 127.0.0.1:1080&lt;/p&gt;

&lt;p&gt;在 CMD 窗口输入如下指令设置代理：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;set http_proxy=socks5://127.0.0.1:1080
set https_proxy=socks5://127.0.0.1:1080
set ftp_proxy=socks5://127.0.0.1:1080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl https://www.facebook.com&lt;/code&gt; 能得到返回结果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-06-20-22-40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;取消代理命令：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set http_proxy=
set https_proxy=
set ftp_proxy=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;设置代理后只对当前命令行窗口生效，重新打开 CDM 需要再次设置。&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;linux-lx-终端代理&quot;&gt;Linux LX 终端代理&lt;/h1&gt;

&lt;p&gt;由于 Linux 下 SS 客户端仅代理 socks5 协议的流量（如果不是这个原因恳请指正）。所以想在 LX 终端使用代理，需要在 SS 的 socks5 流量前再接一个代理，允许 http、https、ftp 协议流量通过。&lt;/p&gt;

&lt;p&gt;我们也假定本地 socks5 代理为 127.0.0.1:1080&lt;/p&gt;

&lt;h2 id=&quot;安装-polipo&quot;&gt;安装 polipo&lt;/h2&gt;

&lt;p&gt;Debian 下直接使用 apt 命令安装：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;polipo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo nano /etc/polipo/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置内容如下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;# This file only needs to list configuration variables that deviate
# from the default values.  See /usr/share/doc/polipo/examples/config.sample
# and &quot;polipo -v&quot; for variables you can tweak and further information.

logSyslog = true
logFile = /var/log/polipo/polipo.log

proxyAddress = &quot;0.0.0.0&quot;

socksParentProxy = &quot;127.0.0.1:1080&quot;
socksProxyType = socks5

chunkHighMark = 50331648
objectHighMark = 16384

dnsQueryIPv6 = no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按 &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;X&lt;/kbd&gt;，&lt;kbd&gt;Y&lt;/kbd&gt; 保存退出。&lt;/p&gt;

&lt;p&gt;重启 polipo 服务：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service polipo restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;启用代理&quot;&gt;启用代理&lt;/h2&gt;

&lt;p&gt;通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service polipo status&lt;/code&gt; 命令，我们可以看到新的监听端口为&lt;strong&gt;8123&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-06-20-22-47.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此，LX 终端启用代理的命令为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;export http_proxy=http://127.0.0.1:8123
export https_proxy=http://127.0.0.1:8123
export ftp_proxy=http://127.0.0.1:8123
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样，直接输入上述命令设置的代理也是临时的。一个比较实用的方法是在~/.bashrc 文件中设置环境，之后就不需要再手动设置了。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在文件最后插入上述三条指令，保存。&lt;/p&gt;

&lt;p&gt;测试 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; 指令：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2020-07-06-20-22-53.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;我对 CMD/LX 终端设置代理的出发点，是为了使用 Google 的一个 API，设置后确实能够成功使用。另外似乎对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; 等指令也有效果，安装 python 模块时的下载速度有比较明显的提升。不过说到底只是在总结如何使用别人做好的工具，很多原理还是没有明白，如果文中有何纰漏，恳请指正。&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><category term="shadowsocks" /><category term="linux" /><summary type="html">在之前的博文中分享了如何 使用 Google 云计算引擎搭建 SS 服务器，如何 使用 SS 客户端，已经满足了科学上网的基本需求。这次将要总结在 Windows 的 CMD 窗口和 Linux 的 LX 终端 中，让 wget curl 等命令使用代理需要进行的一些配置。</summary></entry></feed>