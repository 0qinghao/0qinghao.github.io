<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://0qinghao.github.io/inforest/feed.xml" rel="self" type="application/atom+xml" /><link href="https://0qinghao.github.io/inforest/" rel="alternate" type="text/html" /><updated>2020-06-30T05:18:06+08:00</updated><id>https://0qinghao.github.io/inforest/feed.xml</id><title type="html">林间</title><subtitle>林庆毫的个人空间</subtitle><author><name>Qinghao Lin</name></author><entry><title type="html">译 - 使用iStyle格式化Verilog代码</title><link href="https://0qinghao.github.io/inforest/2019/08/09/translate-use-istyle-to-format-verilog-code/" rel="alternate" type="text/html" title="译 - 使用iStyle格式化Verilog代码" /><published>2019-08-09T00:00:00+08:00</published><updated>2019-08-09T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2019/08/09/translate-use-istyle-to-format-verilog-code</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2019/08/09/translate-use-istyle-to-format-verilog-code/">&lt;blockquote&gt;
  &lt;p&gt;原文：&lt;a href=&quot;https://qiita.com/kkumt93/items/70766645c07c298d19c3&quot;&gt;Verilogでコード整形&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;安装&quot;&gt;安装&lt;/h1&gt;

&lt;p&gt;iStyle可以从GitHub上clone、make自行编译出可执行文件，也可以直接下载已编译好的可执行文件。这里都给出来。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;https://github.com/thomasrussellmurphy/istyle-verilog-formatter&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;可执行文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;https://github.com/HayasiKei/istyle-verilog-formatter/releases/tag/v1.21_x86_64&lt;/p&gt;

&lt;h1 id=&quot;格式化选项&quot;&gt;格式化选项&lt;/h1&gt;

&lt;p&gt;以下是一些格式化时常用的选项及效果示例。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;待格式化代码&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;style&quot;&gt;&lt;strong&gt;–style&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ANSI style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=ansi test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Kernighan&amp;amp;Ritchie style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=kr test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;GNU style&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle --style=gnu test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-s&quot;&gt;-s&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./iStyle -s2 test.v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该选项指定缩进时的空格数量，-s2表示每次缩进使用2个空格（如果是-s4则表示每次用4个空格缩进）。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-p&quot;&gt;-p&lt;/h2&gt;

&lt;p&gt;-p选项指定在运算符两侧插入空格。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-p-1&quot;&gt;-P&lt;/h2&gt;

&lt;p&gt;-P选项指定在运算符和括号周围插入空格。&lt;/p&gt;

&lt;div class=&quot;language-verilog highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clk&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;posedge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;4'h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;虽然文中没有写，&lt;strong&gt;module&lt;/strong&gt;声明的缩进感觉并不是很好。verilog有各种各样的代码风格，因此有一个强大的格式化程序是很有用的。&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">原文：Verilogでコード整形</summary></entry><entry><title type="html">在Windows命令行、Linux终端使用代理</title><link href="https://0qinghao.github.io/inforest/2018/09/19/proxy-set-in-windows-and-linux/" rel="alternate" type="text/html" title="在Windows命令行、Linux终端使用代理" /><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/09/19/proxy-set-in-windows-and-linux</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/09/19/proxy-set-in-windows-and-linux/">&lt;p&gt;在之前的博文中分享了如何&lt;a href=&quot;https://segmentfault.com/a/1190000013399064&quot;&gt;使用Google云计算引擎搭建SS服务器&lt;/a&gt;，如何&lt;a href=&quot;https://segmentfault.com/a/1190000013539547&quot;&gt;使用SS客户端&lt;/a&gt;，已经满足了科学上网的基本需求。这次将要总结在Windows的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt; 窗口和Linux的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LX终端&lt;/code&gt; 中，让 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; 等命令使用代理需要进行的一些配置。&lt;/p&gt;

&lt;h1 id=&quot;windows命令行代理&quot;&gt;Windows命令行代理&lt;/h1&gt;

&lt;p&gt;假设你已经使用了SS客户端，本地socks5代理为127.0.0.1:1080&lt;/p&gt;

&lt;p&gt;在CMD窗口输入如下指令设置代理：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;set http_proxy=socks5://127.0.0.1:1080
set https_proxy=socks5://127.0.0.1:1080
set ftp_proxy=socks5://127.0.0.1:1080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl https://www.facebook.com&lt;/code&gt; 能得到返回结果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/005MY9Xigy1fp4azce62uj30hd075t9e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;取消代理命令：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set http_proxy=
set https_proxy=
set ftp_proxy=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;*****设置代理后只对当前命令行窗口生效，重新打开CDM需要再次设置。&lt;/p&gt;

&lt;h1 id=&quot;linux-lx终端代理&quot;&gt;Linux LX终端代理&lt;/h1&gt;

&lt;p&gt;由于Linux下SS客户端仅代理socks5协议的流量（如果不是这个原因恳请指正）。所以想在LX终端使用代理，需要在SS的socks5流量前再接一个代理，允许http、https、ftp协议流量通过。&lt;/p&gt;

&lt;p&gt;我们也假定本地socks5代理为127.0.0.1:1080&lt;/p&gt;

&lt;h2 id=&quot;安装polipo&quot;&gt;安装polipo&lt;/h2&gt;

&lt;p&gt;Debian下直接使用apt命令安装：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;polipo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo nano /etc/polipo/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置内容如下&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;# This file only needs to list configuration variables that deviate
# from the default values.  See /usr/share/doc/polipo/examples/config.sample
# and &quot;polipo -v&quot; for variables you can tweak and further information.

logSyslog = true
logFile = /var/log/polipo/polipo.log

proxyAddress = &quot;0.0.0.0&quot;

socksParentProxy = &quot;127.0.0.1:1080&quot;
socksProxyType = socks5

chunkHighMark = 50331648
objectHighMark = 16384

dnsQueryIPv6 = no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;X&lt;/kbd&gt;，&lt;kbd&gt;Y&lt;/kbd&gt;保存退出。&lt;/p&gt;

&lt;p&gt;重启polipo服务：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service polipo restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;启用代理&quot;&gt;启用代理&lt;/h2&gt;

&lt;p&gt;通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service polipo status&lt;/code&gt; 命令，我们可以看到新的监听端口为&lt;strong&gt;8123&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4g22nbr8j30f905ddhd.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此，LX终端启用代理的命令为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;export http_proxy=http://127.0.0.1:8123
export https_proxy=http://127.0.0.1:8123
export ftp_proxy=http://127.0.0.1:8123
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样，直接输入上述命令设置的代理也是临时的。一个比较实用的方法是在~/.bashrc文件中设置环境，之后就不需要再手动设置了。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在文件最后插入上述三条指令，保存。&lt;/p&gt;

&lt;p&gt;测试 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; 指令：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4gl2vchsj30er05a3z3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;我对CMD/LX终端设置代理的出发点，是为了使用Google的一个API，设置后确实能够成功使用。另外似乎对 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; 等指令也有效果，安装python模块时的下载速度有比较明显的提升。不过说到底只是在总结如何使用别人做好的工具，很多原理还是没有明白，如果文中有何纰漏，恳请指正。&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">在之前的博文中分享了如何使用Google云计算引擎搭建SS服务器，如何使用SS客户端，已经满足了科学上网的基本需求。这次将要总结在Windows的 CMD 窗口和Linux的 LX终端 中，让 wget curl 等命令使用代理需要进行的一些配置。</summary></entry><entry><title type="html">在Python中使用谷歌Cloud Speech API将语音转换为文字</title><link href="https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text-python/" rel="alternate" type="text/html" title="在Python中使用谷歌Cloud Speech API将语音转换为文字" /><published>2018-03-08T00:00:00+08:00</published><updated>2018-03-08T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text-python</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text-python/">&lt;p&gt;之前我们总结了&lt;a href=&quot;https://segmentfault.com/a/1190000013591768&quot;&gt;使用谷歌Cloud Speech API将语音转换为文字&lt;/a&gt;的基本流程，然而那只是在命令行中使用curl实现的。这次我们将总结在Python中使用Cloud Speech API的方法。&lt;/p&gt;

&lt;h1 id=&quot;配置python开发环境&quot;&gt;配置Python开发环境&lt;/h1&gt;

&lt;p&gt;笔者使用的是树莓派（Debian）进行试验的，其他平台的配置方法可以在&lt;a href=&quot;https://cloud.google.com/python/setup&quot;&gt;这里&lt;/a&gt;查找。&lt;/p&gt;

&lt;h2 id=&quot;安装python&quot;&gt;安装Python&lt;/h2&gt;

&lt;p&gt;大多数Linux发行版都包含Python。对于Debian和Ubuntu，运行以下指令确保Python版本是最新的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo apt update
sudo apt install python python-dev python3 python3-dev python-pip python3-pip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;安装和使用virtualenv&quot;&gt;安装和使用virtualenv&lt;/h2&gt;

&lt;p&gt;尽管这一步不是必须的，但&lt;strong&gt;强烈建议&lt;/strong&gt;你使用virtualenv。virtualenv是一种创建独立Python环境的工具，可以将每个项目的依赖关系隔离开来。在虚拟环境下，你可以不必顾虑python2和python3的冲突；另外一个优势是可以直接将你的项目文件夹复制到其他机器上，文件夹内就包含了项目所依赖的软件包。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-virtualenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装完成后，就可以在你的项目文件夹中创建一个虚拟环境。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;项目文件夹
virtualenv &lt;span class=&quot;nt&quot;&gt;--python&lt;/span&gt; python3 &lt;span class=&quot;nb&quot;&gt;env&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--python&lt;/code&gt; 标志来告诉virtualenv要使用哪个Python版本，这次试验将全程以python3环境进行。执行后会在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;项目文件夹&lt;/code&gt; 内创建一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;env&lt;/code&gt; 文件夹。&lt;/p&gt;

&lt;p&gt;创建完成后，你需要“激活”virtualenv。激活virtualenv会告诉你的shell为Python使用virtualenv的路径。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;source env/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看到激活虚拟环境后，你就可以放心地安装软件包，并确信它们不会影响其他项目。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp57zv7hgqj30cw01gq31.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果你想停止使用virtualenv并返回到全局Python环境，你可以关闭它：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;配置cloud-speech-api客户端库&quot;&gt;配置Cloud Speech API客户端库&lt;/h1&gt;

&lt;p&gt;我们假定你已经有合适的代理，能够使用谷歌服务，并且已经开始使用&lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google云平台&lt;/a&gt;。如果你有疑问，或许可以参考&lt;a href=&quot;https://segmentfault.com/a/1190000014367501&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;安装客户端库&quot;&gt;安装客户端库&lt;/h2&gt;

&lt;p&gt;如果你安装了virtualenv，请确保激活了虚拟环境。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt; google-cloud-speech
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;值得一提的是，笔者使用的树莓派在安装进行到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Running setup.py bdist_wheel for grpcio ...&lt;/code&gt; 时停留了非常久（10分钟以上），这属于正常现象，树莓派编译进行得很慢，需要耐心等待。&lt;/p&gt;

&lt;h2 id=&quot;设置验证&quot;&gt;设置验证&lt;/h2&gt;

&lt;p&gt;登录谷歌云平台&lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;控制台&lt;/a&gt;，前往&lt;a href=&quot;https://console.cloud.google.com/apis/credentials/serviceaccountkey&quot;&gt;创建服务账号密钥&lt;/a&gt;界面。&lt;/p&gt;

&lt;p&gt;从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务帐户&lt;/code&gt; 下拉列表中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新建服务帐户&lt;/code&gt; 。输入合适的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务帐号名称&lt;/code&gt; ， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;角色&lt;/code&gt; 选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Project&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;所有者&lt;/code&gt; 。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密钥类型&lt;/code&gt; 选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp58mxkpqwj30g40a4t9y.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建&lt;/code&gt; 后，会开始下载包含密钥的JSON文件，请&lt;strong&gt;妥善保存&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;最后，将环境变量 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; 设置为含密钥的JSON文件的文件路径，例如：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/pi/speech/speech-account.json&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;请将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/pi/speech/speech-account.json&lt;/code&gt; 替换为你的json文件路径。&lt;/p&gt;

&lt;p&gt;当然，直接输入上述命令设置的环境变量是临时的。一个比较实用的方法是在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; 文件中设置环境，之后就不需要再手动设置了。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在文件末尾插入上述 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export&lt;/code&gt; 命令，保存。&lt;/p&gt;

&lt;h1 id=&quot;使用客户端库&quot;&gt;使用客户端库&lt;/h1&gt;

&lt;p&gt;下例给出了使用客户端库的方法。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Imports the Google Cloud client library
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;google.cloud&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speech&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;google.cloud.speech&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;google.cloud.speech&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;types&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Instantiates a client
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speech&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpeechClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# The name of the audio file to transcribe
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'voice.wav'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Loads the audio into memory
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audio_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audio_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecognitionAudio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecognitionConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecognitionConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AudioEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LINEAR16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_rate_hertz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;language_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cmn-Hans-CN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Detects speech in the audio file
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recognize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Transcript: {}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alternatives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Confidence: {}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alternatives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confidence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;几点说明：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file_name&lt;/code&gt; 给出了声音文件的路径。其中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.path.dirname(__file__)&lt;/code&gt; 表示py代码所在文件夹的路径。故上例中声音文件是py代码相同目录下的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;voice.wav&lt;/code&gt; 。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt; 给出了声音文件的编码信息，Cloud Speech API并不支持任意格式的声音文件，详细要求参见：[AudioEncoding&lt;/td&gt;
      &lt;td&gt;Google Cloud Speech API](https://cloud.google.com/speech/reference/rest/v1/RecognitionConfig#AudioEncoding) 。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;language_code='cmn-Hans-CN'&lt;/code&gt; 表示识别语言为中文普通话。常用的还有American English ( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en-US&lt;/code&gt; )、British English ( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en-GB&lt;/code&gt; )、日本語( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ja-JP&lt;/code&gt; )、廣東話( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yue-Hant-HK&lt;/code&gt; )。更多语言支持可以在[Language Support&lt;/td&gt;
      &lt;td&gt;Google Cloud Speech API](https://cloud.google.com/speech/docs/languages)查询。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp59zy561bj30e802p749.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“Confidence”是置信度，越接近1准确性越高。&lt;/p&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;至此，Cloud Speech API的使用总结就告一段落了，希望能对你有所帮助。这篇总结是参照着&lt;a href=&quot;https://cloud.google.com/speech/docs/&quot;&gt;Google Cloud Speech API文档&lt;/a&gt;写下的，如果有何纰漏恳请指出。&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">之前我们总结了使用谷歌Cloud Speech API将语音转换为文字的基本流程，然而那只是在命令行中使用curl实现的。这次我们将总结在Python中使用Cloud Speech API的方法。</summary></entry><entry><title type="html">使用谷歌Cloud Speech API将语音转换为文字</title><link href="https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text/" rel="alternate" type="text/html" title="使用谷歌Cloud Speech API将语音转换为文字" /><published>2018-03-08T00:00:00+08:00</published><updated>2018-03-08T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/03/08/google-cloud-speech-api-voice2text/">&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/speech/&quot;&gt;Google Cloud Speech API&lt;/a&gt;是由谷歌云平台提供的，利用机器学习技术将语音转换为文字的服务。这个API能识别超过80种语言和语言变体，包括中文、日语、英语甚至广东话。这次，我总结了使用Google Cloud Speech API的基本流程。&lt;/p&gt;

&lt;h1 id=&quot;花5秒钟试用cloud-speech-api吧&quot;&gt;花5秒钟试用Cloud Speech API吧&lt;/h1&gt;

&lt;p&gt;在&lt;a href=&quot;https://cloud.google.com/speech/&quot;&gt;Cloud Speech API概览页&lt;/a&gt;，我们可以体验将语音转换为文字的效果。只需要选择一种语言即可开始使用，甚至不需要登录谷歌账号。（加载出来需要一些时间）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4mcon6f5j30bp09bq3e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;在项目中添加api&quot;&gt;在项目中添加API&lt;/h1&gt;

&lt;p&gt;使用Cloud Speech API需要登录谷歌云平台并申请免费试用，申请试用谷歌云平台的流程可以参考&lt;a href=&quot;https://segmentfault.com/a/1190000014367501&quot;&gt;这篇文章&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;我们假定你能够使用谷歌云平台，并且已经创建了一个项目，下面介绍如何把Cloud Speech API添加到项目中。&lt;/p&gt;

&lt;p&gt;点击&lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;控制台&lt;/a&gt;左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API和服务&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;库&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4mu6nvprj308409lwew.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在搜索框中键入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Speech&lt;/code&gt; 即可找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cloud Speech API&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4mxyxamzj30bb08kgm9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打开API页面，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;启用&lt;/code&gt; 。&lt;/p&gt;

&lt;h1 id=&quot;创建api密钥&quot;&gt;创建API密钥&lt;/h1&gt;

&lt;p&gt;回到之前的页面，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;凭据&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建凭据&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API密钥&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4n6pogcbj30mf0av0tr.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;马上 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API密钥&lt;/code&gt;&lt;/strong&gt; 就创建好了，虽然随时都能在这个页面查询，但为了方便起见，将其记录下来备用吧，很快就要用到它。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;限制密钥&lt;/code&gt; 选项默认情况下应该是“无”，这次只是试着使用API，保持默认“无”即可。&lt;/p&gt;

&lt;h1 id=&quot;准备声音文件&quot;&gt;准备声音文件&lt;/h1&gt;

&lt;p&gt;虽然有些麻烦，但是接下来我们要准备声音文件。Cloud Speech API没办法直接识别mp3、mp4中的声音，我们需要准备FLAC、WAV格式的音频。而且&lt;strong&gt;仅支持单声道音频&lt;/strong&gt;，所以一般都需要转码之类的工作。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;详细的声音文件要求参见：[AudioEncoding&lt;/td&gt;
      &lt;td&gt;Google Cloud Speech API](https://cloud.google.com/speech/reference/rest/v1/RecognitionConfig#AudioEncoding)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;基于上述情况，我读了下面这段文稿，并制成了FLAC格式（单声道）的声音文件。是用手机麦克风进行录音的，质量一般(´・ω・｀) 是否可以正确识别呢？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://share.weiyun.com/b426055608aa3b2c4d5adfda1fb5d67f&quot;&gt;voice.flac&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;寄蜉蝣于天地，渺沧海之一粟。哀吾生之须臾，羡长江之无穷。挟飞仙以遨游，抱明月而长终。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www.millionbook.com/gd/s/shushi/000/001.htm&quot;&gt;《赤壁赋》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;将声音文件上传到cloud-storage&quot;&gt;将声音文件上传到Cloud Storage&lt;/h1&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;如果要使用Cloud Speech API识别本地声音文件，必须将音频文件编码为base64，然后嵌入到稍后将创建的json请求文件中，这虽然可行但并不方便。如果你想使用这种方法，请参考：[Embedding Base64 encoded audio&lt;/td&gt;
      &lt;td&gt;Google Cloud Speech API](https://cloud.google.com/speech/docs/base64-encoding#embedding_base64_encoded_audio)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;我们将使用另一种方案，将声音文件上传到Google Cloud Storage。&lt;/p&gt;

&lt;p&gt;点击控制台左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;存储&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览器&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4pij2z5oj30a50bg74m.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建存储分区&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;输入合适的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;存储分区名称&lt;/code&gt;&lt;/strong&gt;，后文将要用到。默认存储类别选择”Multi-Regional”，Multi-Regional位置选择”亚洲”。点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4pmpmgznj30fx0dimyk.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;上传文件&lt;/code&gt; ，上传声音文件，勾选 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;公开链接&lt;/code&gt; 。&lt;strong&gt;（该音频将能被任何人访问，请注意）&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2018年10月18日更新：
刚看了一下，页面有所改变，暂时没找到公开单个音频文件的方法。
你可以这样做，把整个存储分区公开：
导航栏→存储→浏览器→存储分区最后有个选项，点开来→修改存储分区权限→“添加成员”填“allUsers”，“角色”选“存储对象查看者”→添加
注意：这样该分区内所有内容都可能被任何人访问到&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;另外，请记住上传文件的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文件名&lt;/code&gt;&lt;/strong&gt; ，后文将用到。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4pti0glej30rt0b8gmz.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;将语音转换为文字&quot;&gt;将语音转换为文字&lt;/h1&gt;

&lt;p&gt;终于，可以使用Cloud Speech API将语音转换为文字了。&lt;/p&gt;

&lt;p&gt;首先，我们新建一个json格式的请求文件（request.json）。文件名无特殊要求。&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;FLAC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;languageCode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cmn-Hans-CN&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;audio&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gs://存储分区名称/文件名&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意3个地方：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmn-Hans-CN&lt;/code&gt;&lt;/strong&gt; ：表示识别语言为中文普通话。常用的还有American English ( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en-US&lt;/code&gt; )、British English ( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en-GB&lt;/code&gt; )、日本語( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ja-JP&lt;/code&gt; )、廣東話( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yue-Hant-HK&lt;/code&gt; )。更多语言支持可以在[Language Support&lt;/td&gt;
      &lt;td&gt;Google Cloud Speech API](https://cloud.google.com/speech/docs/languages)查询。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;存储分区名称&lt;/code&gt;&lt;/strong&gt; ：刚才是否有记录下来呢？如果没有记住可以点击控制台左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;存储&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览器&lt;/code&gt; 查看。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文件名&lt;/code&gt;&lt;/strong&gt; ：存储在Cloud Storage中的音频文件名，可以在存储分区中查看。&lt;/p&gt;

&lt;p&gt;最后，我们使用curl命令（Windows平台需另外&lt;a href=&quot;https://curl.haxx.se/download.html&quot;&gt;安装&lt;/a&gt;）向Cloud Speech API发出请求。&lt;/p&gt;

&lt;p&gt;cd到json请求文件所在目录。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;curl -H “Content-Type: application/json” -d @&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;request.json&lt;/code&gt;&lt;/strong&gt; “https://speech.googleapis.com/v1/speech:recognize?key=&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API密钥&lt;/code&gt;&lt;/strong&gt;”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注意2个加粗处：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;request.json&lt;/code&gt;&lt;/strong&gt; ：json请求文件的文件名。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API密钥&lt;/code&gt;&lt;/strong&gt; ：替换为你记录下来的API密钥。如果没有记下来，可以点击控制台左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API和服务&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;凭据&lt;/code&gt; 查看。&lt;/p&gt;

&lt;p&gt;得到结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp4qzhv94pj30i508rgng.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到返回结果也是json格式的数据。”confidence”是置信度，越接近1准确性越高。&lt;/p&gt;

&lt;h1 id=&quot;小结&quot;&gt;小结&lt;/h1&gt;

&lt;p&gt;第一次尝试语音识别服务，得到结果的时候很开心。或许有人会惊讶上例语音识别的准确性，但正如文章开头所说“Cloud Speech API是利用&lt;strong&gt;机器学习&lt;/strong&gt;技术将语音转换为文字的服务”，像上例中这样的俗语、名著甚至是歌词，准确率都出奇地高。如果你录制一段日常语音交给Cloud Speech API识别，结果就不那么满意了。&lt;/p&gt;

&lt;p&gt;最后，这次只是使用curl命令在LX终端获得了识别结果，下次将会总结如何在编程语言中使用Cloud Speech API。&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">Google Cloud Speech API是由谷歌云平台提供的，利用机器学习技术将语音转换为文字的服务。这个API能识别超过80种语言和语言变体，包括中文、日语、英语甚至广东话。这次，我总结了使用Google Cloud Speech API的基本流程。</summary></entry><entry><title type="html">Shadowsocks客户端在不同系统下的使用方法</title><link href="https://0qinghao.github.io/inforest/2018/03/06/shadowsocks-clients/" rel="alternate" type="text/html" title="Shadowsocks客户端在不同系统下的使用方法" /><published>2018-03-06T00:00:00+08:00</published><updated>2018-03-06T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/03/06/shadowsocks-clients</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/03/06/shadowsocks-clients/">&lt;p&gt;当我们配置好Shadowsocks服务器端，或是购买了SS账号后，就可以使用客户端开始科学上网了。下面分别介绍在Windows、安卓、Linux(Debian)系统下SS客户端的使用方法。&lt;/p&gt;

&lt;h1 id=&quot;windows系统下ss客户端的使用方法&quot;&gt;Windows系统下SS客户端的使用方法&lt;/h1&gt;

&lt;p&gt;Windows系统下的SS客户端使用起来最为方便。客户端自带了系统全局代理的功能，甚至可以省去配置浏览器插件的操作。&lt;/p&gt;

&lt;h2 id=&quot;下载客户端&quot;&gt;下载客户端&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-windows/releases&quot;&gt;点击这里，跳转到GitHub下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://share.weiyun.com/edaa2c5f08aa5169c2be5c6a9f59662d&quot;&gt;如果你无法打开GitHub，可以点击这里，前往微云下载，但不保证是最新版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;将压缩包内的可执行程序解压，放置在合适的文件夹内，运行后会在程序同一目录下产生配置文件，如果随便放置容易显得杂乱。&lt;/p&gt;

&lt;h2 id=&quot;配置客户端&quot;&gt;配置客户端&lt;/h2&gt;

&lt;p&gt;第一次打开SS客户端会主动要求编辑服务器。填入你的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器地址&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密码&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器端口号&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密方式&lt;/code&gt;&lt;/strong&gt; ，其他设置可以保持默认。
&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fou6bi1tebj309z09l3zf.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，右击任务栏的小图标，勾选 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;启用系统代理&lt;/code&gt;&lt;/strong&gt; 。系统代理模式选择 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PAC模式&lt;/code&gt;&lt;/strong&gt; ，这样SS会自动使用代理访问墙外站点，不需要另外安装浏览器的代理插件。
&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/005MY9Xigy1fou6nucjagj3059065t8t.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;安卓系统下ss客户端的使用方法&quot;&gt;安卓系统下SS客户端的使用方法&lt;/h1&gt;

&lt;p&gt;安卓系统下的SS客户端也很完善，配置方便，甚至还可以指定仅部分APP使用代理。&lt;/p&gt;

&lt;h2 id=&quot;下载客户端-1&quot;&gt;下载客户端&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;如果你能使用Google Play商店，直接搜索安装&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.github.shadowsocks&quot;&gt;Shadowsocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://share.weiyun.com/f9250253dab9ec9ba9b12e124733adcd&quot;&gt;你也可以点击这里，前往微云下载，但不保证是最新版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;配置客户端-1&quot;&gt;配置客户端&lt;/h2&gt;

&lt;p&gt;点击右上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; 选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;手动设置&lt;/code&gt; ，填入你的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器地址&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密码&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器端口号&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密方式&lt;/code&gt;&lt;/strong&gt; ，其他设置可以保持默认。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp2brcto8aj307y0e3wf1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还可以在配置中开启 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;分应用VPN&lt;/code&gt; 功能，来指定仅部分APP的流量进行代理；或者再打开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;绕行模式&lt;/code&gt; 来指定部分APP的流量绕过代理。&lt;/p&gt;

&lt;h1 id=&quot;debian下ss客户端的使用方法&quot;&gt;Debian下SS客户端的使用方法&lt;/h1&gt;

&lt;p&gt;Linux下使用SS客户端要麻烦一些，一方面Linux下SS不带全局代理，需要搭配浏览器插件使用；另一方面笔者在使用中有遇到bug，不知在你阅读这篇文章时是否已经修复，总之还是会记录在下文中以供参考。&lt;/p&gt;

&lt;p&gt;另外，这部分介绍的是配合Chrome插件实现浏览器翻墙的方法。关于如何在LX终端让 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; 等命令使用代理，将在另一篇文章中再做总结。&lt;/p&gt;

&lt;h2 id=&quot;安装客户端&quot;&gt;安装客户端&lt;/h2&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;运行sslocal&quot;&gt;运行sslocal&lt;/h2&gt;

&lt;p&gt;不带任何参数运行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sslocal&lt;/code&gt; 可以查看帮助。&lt;/p&gt;

&lt;p&gt;运行SS客户端一般有两种方法。你可以参考帮助，将必要的参数填入，用一条较长的指令来运行：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sslocal &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 服务器地址 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 服务器端口 &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; 密码 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 加密方式 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;显然上面这种方式效率太低。另一种方式就是将各项参数保存为json文件，运行时指定配置文件即可。&lt;/p&gt;

&lt;p&gt;假设我们的配置文件是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ss.json&lt;/code&gt; ，其内容为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;{
  &quot;server&quot;:&quot;服务器地址&quot;,
  &quot;server_port&quot;:服务器端口,
  &quot;local_address&quot;:&quot;127.0.0.1&quot;,
  &quot;local_port&quot;:1080,
  &quot;password&quot;:&quot;密码&quot;,
  &quot;timeout&quot;:600,
  &quot;method&quot;:&quot;加密方式&quot;,
  &quot;fast_open&quot;:false
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将你的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器地址&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密码&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器端口号&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密方式&lt;/code&gt;&lt;/strong&gt; 替换到上述文件。（有双引号的请保留双引号，不要删除）&lt;/p&gt;

&lt;p&gt;接下来，每次需要运行SS客户端时，我们只需要输入一条简短的指令：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sslocal &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/ss.json &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;运行sslocal时遇到的bug&quot;&gt;*运行sslocal时遇到的bug&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;解决方案来自&lt;a href=&quot;http://blog.csdn.net/blackfrog_unique/article/details/60320737&quot;&gt;Kali2.0 update到最新版本后安装shadowsocks服务报错问题&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;笔者在运行sslocal命令时遇到了形如 &lt;em&gt;INFO loading libcrypto from libcrypto.so.1.1&lt;/em&gt; 的报错。后在上述文章中找到解决方案。&lt;/p&gt;

&lt;p&gt;打开文件openssl.py，请参照错误提示确定是否与下述文件路径相同：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo nano /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用快捷键&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;_&lt;/kbd&gt;选择跳转到第52行&lt;/p&gt;

&lt;p&gt;将 &lt;em&gt;libcrypto. EVP_CIPHER_CTX_ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cleanup&lt;/code&gt; .argtypes = (c_void_p, )&lt;/em&gt; 修改为 &lt;em&gt;libcrypto. EVP_CIPHER_CTX_ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; .argtypes = (c_void_p, )&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;同样地，跳转到第111行&lt;/p&gt;

&lt;p&gt;将 &lt;em&gt;libcrypto. EVP_CIPHER_CTX_ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cleanup&lt;/code&gt; (self.ctx)&lt;/em&gt; 修改为 &lt;em&gt;libcrypto. EVP_CIPHER_CTX_ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; (self._ctx)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;按&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;X&lt;/kbd&gt;，&lt;kbd&gt;Y&lt;/kbd&gt;保存退出。重新执行sslocal指令运行正常。&lt;/p&gt;

&lt;h2 id=&quot;安装chrome插件&quot;&gt;安装Chrome插件&lt;/h2&gt;

&lt;p&gt;由于Linux下的SS客户端不带全局代理功能，需要配合浏览器插件使用。这里只介绍Chrome插件的安装方法，火狐大体上类似。&lt;/p&gt;

&lt;p&gt;如果你能够使用Chrome应用商店，搜索&lt;a href=&quot;https://chrome.google.com/webstore/search/switchyomega?hl=zh-CN&quot;&gt;SwitchyOmega&lt;/a&gt;安装即可。你也可以点击&lt;a href=&quot;https://share.weiyun.com/28d769f6e52b68b894736b54b29cf9e4&quot;&gt;这里&lt;/a&gt;通过微云下载crx文件，将其拖动到&lt;a href=&quot;chrome://extensions/&quot;&gt;Chrome扩展程序页面&lt;/a&gt;完成安装。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp2f11yv4kj30d207y0t4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击选项，如下图配置SwitchyOmega。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;代理协议&lt;/code&gt; 选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOCKS5&lt;/code&gt; ；如果你在ss.json配置文件中修改过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local_port&lt;/code&gt; 参数，则这里 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;代理端口&lt;/code&gt; 必须与其一致，否则保持默认值1080即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp2f9hgejzj30gl06ct9h.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，保存配置，点击SwitchyOmega图标切换到刚才配置好的情景模式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fp2f89rsqgj30hw09u404.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;结语&quot;&gt;结语&lt;/h1&gt;

&lt;p&gt;由于手上设备有限，没办法总结所有系统下的SS客户端使用方法。例如iOS系统下似乎是使用&lt;a href=&quot;http://apt.thebigboss.org/onepackage.php?bundleid=com.linusyang.shadowsocks&quot;&gt;Big Boss源&lt;/a&gt;搜索ShadowSocks应用，但没法亲自尝试。有兴趣的朋友建议前往官网https://shadowsocks.org/（.com那个是出售SS服务的）进一步了解。&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">当我们配置好Shadowsocks服务器端，或是购买了SS账号后，就可以使用客户端开始科学上网了。下面分别介绍在Windows、安卓、Linux(Debian)系统下SS客户端的使用方法。</summary></entry><entry><title type="html">申请和使用Google云计算引擎配置SS Server</title><link href="https://0qinghao.github.io/inforest/2018/02/27/google-cloud-engine-ss-server/" rel="alternate" type="text/html" title="申请和使用Google云计算引擎配置SS Server" /><published>2018-02-27T00:00:00+08:00</published><updated>2018-02-27T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/02/27/google-cloud-engine-ss-server</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/02/27/google-cloud-engine-ss-server/">&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google Cloud Platform&lt;/a&gt;的新用户可以获得$300赠金的一年使用权，使用这笔不菲的赠金，我们可以构建应用程序、搭建网站、存储数据、体验各种强大的API。这次，我总结了使用Google云计算引擎搭建SS服务器，实现科学上网的过程，也算作为墙内使用谷歌云平台的第一步。&lt;/p&gt;

&lt;h1 id=&quot;科学上网的基本原理&quot;&gt;科学上网的基本原理&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotxvw10lnj30b908lt9s.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们只需要一个能够访问墙外目标地址的代理服务器。本地设备向服务器发送访问目标地址的请求，服务器收到请求后访问目标并将结果回传给本地设备。&lt;/p&gt;

&lt;p&gt;我们是使用Shadowsocks（简称SS，中文名影梭）来配置服务器的，所以一般把这个服务器称为SS服务器。谷歌云平台提供的位于国外的云计算引擎可以用来搭建SS服务器。&lt;/p&gt;

&lt;h1 id=&quot;申请试用谷歌云平台&quot;&gt;申请试用谷歌云平台&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;*重要：你需要一张外币信用卡（VISA/MasterCard/JCB）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先，翻墙。突然有种鸡生蛋，蛋生鸡的矛盾，不过我相信你能找到一个免费试用的VPN。&lt;/p&gt;

&lt;p&gt;登录&lt;a href=&quot;https://cloud.google.com&quot;&gt;谷歌云平台&lt;/a&gt;，点击右上角的申请试用后进入申请界面。地区可以选择中国，不影响后续的申请。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotyf40bi9j30b00aymy2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;账号类型选择“个人”，填写名称地址电话。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotyl3w3anj30dk09ujsp.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;付款方式填写你的外币信用卡（单币银联卡无效）。提交后信用卡会扣除1美金进行验证，验证完成即退回。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotynitahxj30dt07ft9n.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;创建计算引擎&quot;&gt;创建计算引擎&lt;/h1&gt;

&lt;p&gt;进入控制台，首先要求创建一个项目，尽量使用简单易记的项目名。&lt;/p&gt;

&lt;p&gt;项目创建完成后，点击控制台左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Compute Engine&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VM实例&lt;/code&gt; ，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建&lt;/code&gt; 开始创建一个计算引擎。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotz3od46zj30j309eabi.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;区域&lt;/code&gt; 有3个比较好的选择：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;asia-east1：位于台湾

asia-southeast1：位于新加坡

asia-northeast1：位于东京
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从国内ping延迟都在100ms左右，它们的流量费用和硬件费用有细微的差别，在意的朋友可以在&lt;a href=&quot;https://cloud.google.com/compute/pricing&quot;&gt;这里&lt;/a&gt;查询。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;机器类型&lt;/code&gt; 可以选择最小的微型（1个共享vCPU，0.6GB内存）以节省硬件费用，单作为SS服务器该配置已经足够。&lt;/p&gt;

&lt;p&gt;其他设置可以保持默认。点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fotzuwl2gej30ep0acwgb.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;配置ss服务器&quot;&gt;配置SS服务器&lt;/h1&gt;

&lt;p&gt;创建完成后可以看到分配给实例的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;外部IP&lt;/code&gt;&lt;/strong&gt; ，请牢记。&lt;/p&gt;

&lt;p&gt;点击云引擎后面的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt; ，远程连接该主机，进行配置。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fou05u93clj30cw04yweq.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里使用&lt;a href=&quot;https://teddysun.com/358.html&quot;&gt;秋水逸冰&lt;/a&gt;大大的SS服务器配置脚本。&lt;/p&gt;

&lt;p&gt;依次输入下面三条指令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/wjk199511140034/ss-onekeyinstall/master/shadowsocks.sh

sudo chmod +x shadowsocks.sh

sudo ./shadowsocks.sh 2&amp;gt;&amp;amp;1 | tee shadowsocks.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第三条指令运行后即进入配置过程，需要根据提示输入几项信息。&lt;/p&gt;

&lt;p&gt;Please input password for shadowsocks-libev：输入 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密码&lt;/code&gt;&lt;/strong&gt; ，请牢记&lt;/p&gt;

&lt;p&gt;Please enter a port for shadowsocks-libev：输入SS &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器端口号&lt;/code&gt;&lt;/strong&gt; ，请牢记&lt;/p&gt;

&lt;p&gt;Which cipher you’d select：选择一种 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密方式&lt;/code&gt;&lt;/strong&gt; ，请牢记&lt;/p&gt;

&lt;p&gt;按任意键开始执行脚本，等待脚本运行完毕。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fou5nkwqofj30gs07d768.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;创建防火墙规则&quot;&gt;创建防火墙规则&lt;/h1&gt;

&lt;p&gt;点击控制台左上角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;☰&lt;/code&gt; 打开导航栏，找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VPC网络&lt;/code&gt; → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;防火墙规则&lt;/code&gt; ，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;创建防火墙规则&lt;/code&gt; 创建如下2个规则。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;入站规则&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;流量方向&lt;/code&gt; ：入站&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;目标&lt;/code&gt; ：网络中的所有实例&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;来源 IP 地址范围&lt;/code&gt; ：0.0.0.0/0&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;协议和端口&lt;/code&gt; ：全部允许&lt;/p&gt;

&lt;p&gt;其他部分可以保持默认，这条规则表示允许所有ip/端口的所有协议入站。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;出站规则&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;流量方向&lt;/code&gt; ：出站&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;目标&lt;/code&gt; ：网络中的所有实例&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;来源 IP 地址范围&lt;/code&gt; ：0.0.0.0/0&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;协议和端口&lt;/code&gt; ：全部允许&lt;/p&gt;

&lt;p&gt;其他部分可以保持默认，这条规则表示允许所有协议出站到所有ip/端口。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fou5nhwhkuj30hx07eq4a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，SS服务器部署完毕。你可以关闭你不稳定的试用版VPN，准备开始正确地科学上网了。&lt;/p&gt;

&lt;h1 id=&quot;使用ss客户端&quot;&gt;使用SS客户端&lt;/h1&gt;

&lt;p&gt;这里仅以Windows客户端为例，Android端很相似。Debian平台使用SS客户端则需要进行一些配置，将另外做一次总结。&lt;/p&gt;

&lt;p&gt;可以在GitHub下载到Windows平台的&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-windows/releases&quot;&gt;SS客户端&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;如果你无法打开GitHub，可以点击&lt;a href=&quot;https://share.weiyun.com/edaa2c5f08aa5169c2be5c6a9f59662d&quot;&gt;这里&lt;/a&gt;，前往微云下载，但不保证是最新版本。&lt;/p&gt;

&lt;p&gt;请将可执行程序放置在合适的文件夹内，运行后会在程序同一目录下产生配置文件，如果随便放置容易显得杂乱。&lt;/p&gt;

&lt;p&gt;第一次打开SS客户端会主动要求编辑服务器。填入你的 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;外部IP&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;密码&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;服务器端口号&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密方式&lt;/code&gt;&lt;/strong&gt; ，其他设置可以保持默认。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005MY9Xigy1fou6bi1tebj309z09l3zf.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，右击任务栏的小图标，勾选 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;启用系统代理&lt;/code&gt;&lt;/strong&gt; 。系统代理模式选择 &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PAC模式&lt;/code&gt;&lt;/strong&gt; ，这样SS会自动使用代理访问墙外站点，不需要另外安装浏览器的代理插件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/005MY9Xigy1fou6nucjagj3059065t8t.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;参考资料&quot;&gt;参考资料&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://teddysun.com/358.html&quot;&gt;Debian下shadowsocks-libev一键安装脚本&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://teddysun.com/399.html&quot;&gt;Shadowsocks Troubleshooting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.021xt.cc/archives/98&quot;&gt;Shadowsocks原理和搭建&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://51.ruyo.net/2144.html&quot;&gt;Google Cloud服务免费申请试用以及使用教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">Google Cloud Platform的新用户可以获得$300赠金的一年使用权，使用这笔不菲的赠金，我们可以构建应用程序、搭建网站、存储数据、体验各种强大的API。这次，我总结了使用Google云计算引擎搭建SS服务器，实现科学上网的过程，也算作为墙内使用谷歌云平台的第一步。</summary></entry><entry><title type="html">树莓派学习手记——修改软件源</title><link href="https://0qinghao.github.io/inforest/2018/01/06/RPi-apt-source/" rel="alternate" type="text/html" title="树莓派学习手记——修改软件源" /><published>2018-01-06T00:00:00+08:00</published><updated>2018-01-06T00:00:00+08:00</updated><id>https://0qinghao.github.io/inforest/2018/01/06/RPi-apt-source</id><content type="html" xml:base="https://0qinghao.github.io/inforest/2018/01/06/RPi-apt-source/">&lt;h2 id=&quot;1-国情国情&quot;&gt;1. 国情，国情&lt;/h2&gt;

&lt;p&gt;在Raspbian/Ubuntu系统上，升级系统或安装软件只需要一条很简单的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo apt install 软件包名		# 安装软件
sudo apt upgrade		# 更新软件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然而在天朝的网络下，很难顺利地完成下载过程。但好在有许多高校/机构提供了及时更新的镜像网站，我们可以通过修改配置文件解决下载难的问题。&lt;/p&gt;

&lt;p&gt;很多同学查找解决方法后，或许能解决一部分问题，但仍会遇到连接超时的问题。究其原因，大致有两点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;树莓派的软件源配置有两处，而大部分教程只指出了一处；&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;没有区分系统版本（Codename），Codename目前分为jessie / wheezy / squeeze / stretch，大部分教程仍使用的是jessie或wheezy，而笔者安装的系统却是stretch。&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-配置文件在哪&quot;&gt;2. 配置文件在哪&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;/etc/apt/sources.list
/etc/apt/sources.list.d/raspi.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很多教程只指出了第一处，如果没有修改第二个配置文件，更新系统时很容易出现连接超时的问题。&lt;/p&gt;

&lt;p&gt;在修改配置文件之前，可以选择先备份一下原文件，但这个配置文件也不太重要，不想麻烦也可跳过。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.bak
sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h2 id=&quot;3-我的codename是什么&quot;&gt;3. 我的Codename是什么&lt;/h2&gt;

&lt;p&gt;我们来确定自己树莓派安装的系统Codename是什么：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;lsb_release -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行这条指令之后，可以很清楚的看到Codename&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Codename: stretch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;h2 id=&quot;4-修改配置文件&quot;&gt;4. 修改配置文件&lt;/h2&gt;

&lt;p&gt;国内有许多高校提供了树莓派的软件源镜像。可以在这个网页查看所有的镜像网站：http://www.raspbian.org/RaspbianMirrors&lt;/p&gt;

&lt;p&gt;笔者选择了中科大提供的镜像，也是大家公认的比较稳定的镜像之一。&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo nano /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将该文件的内容替换为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free
deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;X&lt;/kbd&gt; 关闭文件，键入&lt;kbd&gt;Y&lt;/kbd&gt;（保存修改）回车。&lt;/p&gt;

&lt;p&gt;修改第二个配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo nano /etc/apt/sources.list.d/raspi.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;类似地，内容替换为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui
deb-src http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;相信细心地同学已经注意到了，修改的文件内容网址后紧接着一项”stretch”。如果你手中的树莓派安装的系统Codename并不是stretch，还请进行相应修改。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最后，刷新软件列表：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-nohighlight&quot;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改完成了！赶紧去体验一下高速更新系统/升级软件的快感吧。感谢你阅读文章！&lt;/p&gt;</content><author><name>Qinghao Lin</name></author><summary type="html">1. 国情，国情</summary></entry></feed>