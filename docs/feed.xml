<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://0qinghao.github.io/InForest/feed.xml" rel="self" type="application/atom+xml" /><link href="https://0qinghao.github.io/InForest/" rel="alternate" type="text/html" /><updated>2020-06-24T20:39:08+08:00</updated><id>https://0qinghao.github.io/InForest/feed.xml</id><title type="html">林间</title><subtitle>林庆毫的个人空间</subtitle><author><name>Qinghao Lin</name></author><entry><title type="html">译 - 使用iStyle格式化Verilog代码</title><link href="https://0qinghao.github.io/InForest/2020/06/21/translate-use-istyle-to-format-verilog-code/" rel="alternate" type="text/html" title="译 - 使用iStyle格式化Verilog代码" /><published>2020-06-21T00:00:00+08:00</published><updated>2020-06-21T00:00:00+08:00</updated><id>https://0qinghao.github.io/InForest/2020/06/21/translate-use-istyle-to-format-verilog-code</id><content type="html" xml:base="https://0qinghao.github.io/InForest/2020/06/21/translate-use-istyle-to-format-verilog-code/">&gt; 原文：[Verilogでコード整形](https://qiita.com/kkumt93/items/70766645c07c298d19c3)

# 安装

iStyle可以从GitHub上clone、make自行编译出可执行文件，也可以直接下载已编译好的可执行文件。这里都给出来。

**Github**

https://github.com/thomasrussellmurphy/istyle-verilog-formatter

**可执行文件**

https://github.com/HayasiKei/istyle-verilog-formatter/releases/tag/v1.21_x86_64

# 格式化选项

以下是一些格式化时常用的选项及效果示例。

**待格式化代码**

``` verilog
reg [3:0] cnt;
always @(posedge clk or posedge rst) begin
if(rst) begin
cnt&lt;=4'h0;
end else begin
cnt&lt;=cnt+4'h1;
end
end
```

## **--style**

**ANSI style**

``` 
./iStyle --style=ansi test.v
```

``` verilog
reg [3:0] cnt;
always @(posedge clk or posedge rst)
begin
    if(rst)
    begin
        cnt&lt;=4'h0;
    end
    else
    begin
        cnt&lt;=cnt+4'h1;
    end
end
```

---

**Kernighan&amp;Ritchie style**

``` 
./iStyle --style=kr test.v
```

``` verilog
reg [3:0] cnt;
always @(posedge clk or posedge rst) begin
    if(rst) begin
        cnt&lt;=4'h0;
    end
    else begin
        cnt&lt;=cnt+4'h1;
    end
end
```

---

**GNU style**

``` 
./iStyle --style=gnu test.v
```

``` verilog
reg [3:0] cnt;
always @(posedge clk or posedge rst)
  begin
    if(rst)
      begin
        cnt&lt;=4'h0;
      end
    else
      begin
        cnt&lt;=cnt+4'h1;
      end
  end
```

## -s

``` 
./iStyle -s2 test.v
```

该选项指定缩进时的空格数量，-s2表示每次缩进使用2个空格（如果是-s4则表示每次用4个空格缩进）。

``` verilog
reg [3:0] cnt;
always @(posedge clk or posedge rst) begin
  if(rst) begin
    cnt&lt;=4'h0;
  end else begin
    cnt&lt;=cnt+4'h1;
  end
end
```

## -p

-p选项指定在运算符两侧插入空格。

``` verilog
reg [3: 0] cnt;
always @(posedge clk or posedge rst) begin
    if (rst)
    begin
        cnt &lt;= 4'h0;
    end else
    begin
        cnt &lt;= cnt + 4'h1;
    end
end
```

## -P

-P选项指定在运算符和括号周围插入空格。

``` verilog
reg [ 3: 0 ] cnt;
always @( posedge clk or posedge rst ) begin
    if ( rst )
    begin
        cnt &lt;= 4'h0;
    end else
    begin
        cnt &lt;= cnt + 4'h1;
    end
end
```

# 小结

虽然文中没有写，**module**声明的缩进感觉并不是很好。verilog有各种各样的代码风格，因此有一个强大的格式化程序是很有用的。</content><author><name>Qinghao Lin</name></author><summary type="html">原文：Verilogでコード整形</summary></entry></feed>